{"version":3,"sources":["logo.svg","Reducers/covid.js","Essentials/Loader.js","Components/WorldTracker.js","Actions/worldActions.js","Essentials/LineChart.js","Reducers/index.js","Essentials/Collapsable.js","Components/IndiaTracker.js","Actions/indiaActions.js","Components/Home.js","AppRouter/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","intialState","world","show_loader","searchedCountry","show_search_loader","date_world","india","searchedState","date_india","state","action","type","payload","data","countries","top10","filter","CountryCode","testing_data","data_date_wise","statecode","district_wise","Loader","className","Component","Option","Select","WorldTracker","props","_displayWorldData","world_data","TotalConfirmed","NewConfirmed","aria-hidden","TotalDeaths","NewDeaths","TotalRecovered","NewRecovered","_displayActiveCases","onChange","value","console","log","setState","searchSelected","searchLoader","searchCountry","_displayTop10","length","style","margin","textAlign","Fragment","map","i","key","Country","_renderSearchCountry","showSearch","width","placeholder","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","country","_displaySearchedCountry","this","fetchWorldData","date","moment","format","connect","covid","dispatch","fetch","method","then","res","json","Date","Global","Countries","a","j","temp","slice","setTimeout","LineChart","_getSeriesList","lineChart","d","name","legends","itemStyle","color","colors","_getOptions","labels","tooltip","trigger","legend","bottom","itemGap","itemHeight","grid","left","right","containLabel","toolbox","xAxis","boundaryGap","yAxis","series","title","text","axisLabel","textStyle","fontSize","splitLine","lineStyle","heading","nameLocation","nameTextStyle","fontWeight","padding","top","axisPointer","label","show","formatter","params","replace","icon","calculable","backgroundColor","borderWidth","notMerge","height","PureComponent","getDerivedStateFromProps","history","Panel","Collapse","Collapsable","_displayText","local_data","Object","keys","dt","confirmed","defaultActiveKey","accordion","expandIconPosition","borderRadius","marginTop","header","letterSpacing","display","minHeight","flexWrap","justifyContent","values","IndiaTracker","_displayIndiaData","india_data","dailyconfirmed","deaths","dailydeceased","recovered","dailyrecovered","_displayIndiaActiveCases","active","_displayTop10States","searchState","_renderSearchState","_displaySearchedState","_displayDataSummary","marginBottom","totalconfirmed","totaldeceased","totalrecovered","parseInt","_displayTestingDataSummary","samplesTested","dates","samplesPositive","updatetimestamp","totalsamplestested","totalpositivecases","_displayDistrictWise","fetchIndiaData","fetchDistrictWiseData","utc","statewise","split","join","reverse","deceased","cases_time_series","push","testingDates","samples","samplePositive","tested","testingData","local","samplereportedtoday","positivecasesfromsamplesreported","sort","Header","Layout","Content","Footer","Home","myRef","React","createRef","current_location","window","location","pathname","current","clientWidth","to","position","zIndex","_displayPageHeading","ref","_displayHeaderRight","background","exact","path","component","router","index","createBrowserHistory","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","routerMiddleware","thunk","store","createStore","combineReducers","connectRouter","applyMiddleware","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c6fa193b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const intialState = {\n  world: {\n    show_loader: true,\n    searchedCountry: \"\",\n    show_search_loader: false,\n  },\n  date_world: \"\",\n  india: {\n    show_loader: true,\n    searchedState: \"\",\n    show_search_loader: false,\n  },\n  date_india: \"\",\n};\n\nexport default function (state = intialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case \"WORLD_DATA_LOADER\":\n      return {\n        ...state,\n        world: {\n          ...state.world,\n          show_loader: payload,\n        },\n      };\n\n    case \"SET_WORLD_DATA\":\n      return {\n        ...state,\n        world: {\n          ...state.world,\n          data: payload,\n        },\n      };\n\n    case \"SET_WORLD_COUNTRIES\":\n      return {\n        ...state,\n        world: {\n          ...state.world,\n          countries: payload,\n        },\n      };\n\n    case \"SET_WORLD_TOP_10\":\n      return {\n        ...state,\n        world: {\n          ...state.world,\n          top10: payload,\n        },\n      };\n\n    case \"SET_SEARCHED_COUNTRY\":\n      return {\n        ...state,\n        world: {\n          ...state.world,\n          searchedCountry: state.world.countries.filter(\n            (data) => data.CountryCode == payload\n          ),\n        },\n      };\n\n    case \"SEARCH_COUNTRY_LOADER\":\n      return {\n        ...state,\n        world: {\n          ...state.world,\n          show_search_loader: payload,\n        },\n      };\n\n    case \"SET_DATE\":\n      return {\n        ...state,\n        date_world: payload,\n      };\n\n    case \"SET_INDIA_DATE\":\n      return {\n        ...state,\n        date_india: payload,\n      };\n\n    case \"SET_INDIA_DATA\":\n      return {\n        ...state,\n        india: {\n          ...state.india,\n          data: payload,\n        },\n      };\n\n    case \"SET_INDIA_TESTING_DATA\":\n      return {\n        ...state,\n        india: {\n          ...state.india,\n          testing_data: payload,\n        },\n      };\n\n    case \"SET_INDIA_DATE_WISE_ANALYSIS\":\n      return {\n        ...state,\n        india: {\n          ...state.india,\n          data_date_wise: payload,\n        },\n      };\n\n    case \"INDIA_DATA_LOADER\":\n      return {\n        ...state,\n        india: {\n          ...state.india,\n          show_loader: payload,\n        },\n      };\n\n    case \"SET_SEARCHED_STATE\":\n      return {\n        ...state,\n        india: {\n          ...state.india,\n          searchedState: state.india.data.filter(\n            (state) => state.statecode === payload\n          ),\n        },\n      };\n\n    case \"SEARCH_STATE_LOADER\":\n      return {\n        ...state,\n        india: {\n          ...state.india,\n          show_search_loader: payload,\n        },\n      };\n\n    case \"SET_DATA_DISTRICT_WISE\":\n      return {\n        ...state,\n        india: {\n          ...state.india,\n          district_wise: payload,\n        },\n      };\n\n    default:\n      return state;\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Loader extends Component {\n  render() {\n    return <div className=\"loader\"></div>;\n  }\n}\n","import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport moment from \"moment\";\n\nimport { fetchWorldData, searchCountry } from \"../Actions/worldActions\";\nimport Loader from \"../Essentials/Loader\";\n\nimport { Select } from \"antd\";\n\nconst { Option } = Select;\n\nclass WorldTracker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchSelected: \"\",\n      searchLoader: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchWorldData();\n  }\n\n  _displayWorldData = (world_data) => {\n    return (\n      <div className=\"flex-row-sa\">\n        {world_data && !world_data.show_loader ? (\n          <div className=\"box-red\">\n            <div className=\"overlay\"></div>\n            <h2 className=\"box-heading\">World Total Confirmed Cases</h2>\n            <h3 className=\"box-stats red\">{world_data.data.TotalConfirmed}</h3>\n            {world_data.data.NewConfirmed > 0 ? (\n              <h3 className=\"box-stats-up\">\n                <i className=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>&nbsp;\n                {world_data.data.NewConfirmed}\n              </h3>\n            ) : (\n              <h3 className=\"box-stats-down\">\n                <i className=\"fa fa-arrow-down\" aria-hidden=\"true\"></i>&nbsp;\n                {world_data.data.NewConfirmed}\n              </h3>\n            )}\n          </div>\n        ) : (\n          <div className=\"box-grey\">\n            <Loader />\n          </div>\n        )}\n        {world_data && !world_data.show_loader ? (\n          <div className=\"box-grey\">\n            <div className=\"overlay\"></div>\n            <h2 className=\"box-heading\">World Total Death Cases</h2>\n            <h3 className=\"box-stats grey\">{world_data.data.TotalDeaths}</h3>\n            {world_data.data.NewDeaths > 0 ? (\n              <h3 className=\"box-stats-up\">\n                <i className=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>&nbsp;\n                {world_data.data.NewDeaths}\n              </h3>\n            ) : (\n              <h3 className=\"box-stats-down\">\n                <i className=\"fa fa-arrow-down\" aria-hidden=\"true\"></i>&nbsp;\n                {world_data.data.NewDeaths}\n              </h3>\n            )}\n          </div>\n        ) : (\n          <div className=\"box-grey\">\n            <Loader />\n          </div>\n        )}\n\n        {world_data && !world_data.show_loader ? (\n          <div className=\"box-green\">\n            <div className=\"overlay\"></div>{\" \"}\n            <h2 className=\"box-heading\">World Total Recovered Cases</h2>\n            <h3 className=\"box-stats green\">\n              {world_data.data.TotalRecovered}\n            </h3>\n            {world_data.data.NewRecovered > 0 ? (\n              <h3 className=\"box-stats-up\">\n                <i className=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>&nbsp;\n                {world_data.data.NewRecovered}\n              </h3>\n            ) : (\n              <h3 className=\"box-stats-down\">\n                <i className=\"fa fa-arrow-down\" aria-hidden=\"true\"></i>&nbsp;\n                {world_data.data.NewRecovered}\n              </h3>\n            )}\n          </div>\n        ) : (\n          <div className=\"box-grey\">\n            <Loader />\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  _displayActiveCases = (world_data) => {\n    return (\n      <div>\n        {world_data.data && !world_data.show_loader && (\n          <h2 className=\"page-heading\">\n            World Total Active Cases : &nbsp;\n            <span className=\"active-cases\">\n              {world_data.data.TotalConfirmed -\n                (world_data.data.TotalDeaths - world_data.data.TotalRecovered)}\n            </span>\n          </h2>\n        )}\n      </div>\n    );\n  };\n\n  onChange = (value) => {\n    console.log(`selected ${value}`);\n    this.setState(\n      {\n        searchSelected: value,\n        searchLoader: false,\n      },\n      this.props.searchCountry(value)\n    );\n  };\n\n  _displayTop10 = (world_data) => {\n    const { searchSelected } = this.state;\n    if (world_data && !world_data.show_loader && searchSelected.length == 0) {\n      return (\n        <div style={{ margin: \"50px 0\" }}>\n          <h2 style={{ textAlign: \"center\", margin: \"30px 0\" }}>\n            Top 10 Countries affected by Pandemic Covid-19\n          </h2>\n          <div className=\"flex-row-sa\">\n            {world_data.top10 && world_data.top10.length > 0 && (\n              <React.Fragment>\n                {world_data.top10.map((data, i) => {\n                  return (\n                    <div className=\"box-grey\" key={i}>\n                      <h2 className=\"box-heading\">\n                        {data.Country}-{data.CountryCode}\n                      </h2>\n                      <h3 className=\"box-stats fs-14\">\n                        Confirmed Cases :{\" \"}\n                        <span className=\"red fs-16\">{data.TotalConfirmed}</span>{\" \"}\n                        {data.NewConfirmed > 0 ? (\n                          <span className=\"green fs-10\">\n                            <i\n                              className=\"fa fa-arrow-up\"\n                              aria-hidden=\"true\"\n                            ></i>\n                            &nbsp;\n                            {data.NewConfirmed}\n                          </span>\n                        ) : (\n                          <span className=\"red fs-10\">\n                            <i\n                              className=\"fa fa-arrow-down\"\n                              aria-hidden=\"true\"\n                            ></i>\n                            &nbsp;\n                            {data.NewConfirmed}\n                          </span>\n                        )}\n                      </h3>\n                      <h3 className=\"box-stats fs-14\">\n                        Deaths Reported :{\" \"}\n                        <span className=\"grey fs-16\">{data.TotalDeaths}</span>{\" \"}\n                        {data.NewConfirmed > 0 ? (\n                          <span className=\"green fs-10\">\n                            <i\n                              className=\"fa fa-arrow-up\"\n                              aria-hidden=\"true\"\n                            ></i>\n                            &nbsp;\n                            {data.NewDeaths}\n                          </span>\n                        ) : (\n                          <span className=\"red fs-10\">\n                            <i\n                              className=\"fa fa-arrow-down\"\n                              aria-hidden=\"true\"\n                            ></i>\n                            &nbsp;\n                            {data.NewDeaths}\n                          </span>\n                        )}\n                      </h3>\n                      <h3 className=\"box-stats fs-14\">\n                        Recovered Cases :{\" \"}\n                        <span className=\"green fs-16\">\n                          {data.TotalRecovered}\n                        </span>{\" \"}\n                        {data.NewConfirmed > 0 ? (\n                          <span className=\"green fs-10\">\n                            <i\n                              className=\"fa fa-arrow-up\"\n                              aria-hidden=\"true\"\n                            ></i>\n                            &nbsp;\n                            {data.NewRecovered}\n                          </span>\n                        ) : (\n                          <span className=\"red fs-10\">\n                            <i\n                              className=\"fa fa-arrow-down\"\n                              aria-hidden=\"true\"\n                            ></i>\n                            &nbsp;\n                            {data.NewRecovered}\n                          </span>\n                        )}\n                      </h3>\n                      <h3 className=\"box-stats fs-14\">\n                        Active Cases :{\" \"}\n                        <span className=\"blue fs-16\">\n                          {data.TotalConfirmed -\n                            (data.TotalDeaths + data.TotalRecovered)}\n                        </span>{\" \"}\n                        {data.NewConfirmed -\n                          (data.NewDeaths + data.NewRecovered) >\n                        0 ? (\n                          <span className=\"green fs-10\">\n                            <i\n                              className=\"fa fa-arrow-up\"\n                              aria-hidden=\"true\"\n                            ></i>\n                            &nbsp;\n                            {data.NewConfirmed -\n                              (data.NewDeaths + data.NewRecovered)}\n                          </span>\n                        ) : (\n                          <span className=\"red fs-10\">\n                            <i\n                              className=\"fa fa-arrow-down\"\n                              aria-hidden=\"true\"\n                            ></i>\n                            &nbsp;\n                            {(data.NewConfirmed -\n                              (data.NewDeaths + data.NewRecovered)) *\n                              -1}\n                          </span>\n                        )}\n                      </h3>\n                    </div>\n                  );\n                })}\n              </React.Fragment>\n            )}\n          </div>\n        </div>\n      );\n    } else if (searchSelected.length == 0 && world_data.show_loader) {\n      return (\n        <div>\n          <Loader />\n        </div>\n      );\n    }\n  };\n\n  //   onBlur = () => {\n  //     console.log(\"blur\");\n  //   };\n\n  //   onFocus = () => {\n  //     console.log(\"focus\");\n  //   };\n\n  //   onSearch = (val) => {\n  //     // console.log(\"search:\", val);\n  //     this.setState({\n  //       searchSelected: val,\n  //     });\n  //   };\n\n  _renderSearchCountry = (world_data) => {\n    if (world_data && !world_data.show_search_loader && world_data.countries) {\n      return (\n        <React.Fragment>\n          <h2 className=\"select-label\">Search Country : </h2>&nbsp;&nbsp;\n          <Select\n            showSearch\n            style={{ width: 200 }}\n            placeholder=\"Select a country\"\n            optionFilterProp=\"children\"\n            onChange={this.onChange}\n            //   onFocus={this.onFocus}\n            //   onBlur={this.onBlur}\n            //   onSearch={this.onSearch}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            {/* {\" \"}\n              <Option value=\"jack\">Jack</Option>\n              <Option value=\"lucy\">Lucy</Option>\n              <Option value=\"tom\">Tom</Option> */}\n            {world_data &&\n              world_data.countries &&\n              world_data.countries.map((country, i) => (\n                <Option value={country.CountryCode} key={i}>\n                  {country.Country}\n                </Option>\n              ))}\n          </Select>\n        </React.Fragment>\n      );\n    }\n  };\n\n  _displaySearchedCountry = (world_data) => {\n    const { searchSelected } = this.state;\n    if (\n      world_data &&\n      !world_data.show_search_loader &&\n      searchSelected.length > 0\n    ) {\n      return (\n        <div className=\"flex-row-sa\">\n          {world_data.searchedCountry && world_data.searchedCountry.length > 0 && (\n            <React.Fragment>\n              {world_data.searchedCountry.map((data, i) => {\n                return (\n                  <div className=\"box-grey\" key={i}>\n                    <h2 className=\"box-heading\">\n                      {data.Country}-{data.CountryCode}\n                    </h2>\n                    <h3 className=\"box-stats fs-14\">\n                      Confirmed Cases :{\" \"}\n                      <span className=\"red fs-16\">{data.TotalConfirmed}</span>{\" \"}\n                      {data.NewConfirmed > 0 ? (\n                        <span className=\"green fs-10\">\n                          <i className=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>\n                          &nbsp;\n                          {data.NewConfirmed}\n                        </span>\n                      ) : (\n                        <span className=\"red fs-10\">\n                          <i\n                            className=\"fa fa-arrow-down\"\n                            aria-hidden=\"true\"\n                          ></i>\n                          &nbsp;\n                          {data.NewConfirmed}\n                        </span>\n                      )}\n                    </h3>\n                    <h3 className=\"box-stats fs-14\">\n                      Deaths Reported :{\" \"}\n                      <span className=\"grey fs-16\">{data.TotalDeaths}</span>{\" \"}\n                      {data.NewConfirmed > 0 ? (\n                        <span className=\"green fs-10\">\n                          <i className=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>\n                          &nbsp;\n                          {data.NewDeaths}\n                        </span>\n                      ) : (\n                        <span className=\"red fs-10\">\n                          <i\n                            className=\"fa fa-arrow-down\"\n                            aria-hidden=\"true\"\n                          ></i>\n                          &nbsp;\n                          {data.NewDeaths}\n                        </span>\n                      )}\n                    </h3>\n                    <h3 className=\"box-stats fs-14\">\n                      Recovered Cases :{\" \"}\n                      <span className=\"green fs-16\">{data.TotalRecovered}</span>{\" \"}\n                      {data.NewConfirmed > 0 ? (\n                        <span className=\"green fs-10\">\n                          <i className=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>\n                          &nbsp;\n                          {data.NewRecovered}\n                        </span>\n                      ) : (\n                        <span className=\"red fs-10\">\n                          <i\n                            className=\"fa fa-arrow-down\"\n                            aria-hidden=\"true\"\n                          ></i>\n                          &nbsp;\n                          {data.NewRecovered}\n                        </span>\n                      )}\n                    </h3>\n                    <h3 className=\"box-stats fs-14\">\n                      Active Cases :{\" \"}\n                      <span className=\"blue fs-16\">\n                        {data.TotalConfirmed -\n                          (data.TotalDeaths + data.TotalRecovered)}\n                      </span>{\" \"}\n                      {data.NewConfirmed -\n                        (data.NewDeaths + data.NewRecovered) >\n                      0 ? (\n                        <span className=\"green fs-10\">\n                          <i className=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>\n                          &nbsp;\n                          {data.NewConfirmed -\n                            (data.NewDeaths + data.NewRecovered)}\n                        </span>\n                      ) : (\n                        <span className=\"red fs-10\">\n                          <i\n                            className=\"fa fa-arrow-down\"\n                            aria-hidden=\"true\"\n                          ></i>\n                          &nbsp;\n                          {(data.NewConfirmed -\n                            (data.NewDeaths + data.NewRecovered)) *\n                            -1}\n                        </span>\n                      )}\n                    </h3>\n                  </div>\n                );\n              })}\n            </React.Fragment>\n          )}\n        </div>\n      );\n    } else if (searchSelected.length > 0 && world_data.show_search_loader) {\n      return (\n        <div>\n          <Loader />\n        </div>\n      );\n    }\n  };\n  render() {\n    const { world_data, date } = this.props;\n    return (\n      <div>\n        <div className=\"ta-right date\">\n          {date\n            ? \"Last Updated : \" +\n              moment(date).format(\"dddd, MMMM Do YYYY, h:mm:ss a\")\n            : \"fetching...\"}\n        </div>\n        {this._displayWorldData(world_data)}\n        {this._displayActiveCases(world_data)}\n        <div className=\"flex-center\" style={{ margin: \"50px 0\" }}>\n          {this._renderSearchCountry(world_data)}\n        </div>\n        <div>{this._displayTop10(world_data)}</div>\n        <div>{this._displaySearchedCountry(world_data)}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  world_data: state.covid.world,\n  date: state.covid.date_world,\n});\n\nexport default connect(mapStateToProps, { fetchWorldData, searchCountry })(\n  WorldTracker\n);\n","export const fetchWorldData = () => (dispatch) => {\n  //enable loader\n  dispatch({\n    type: \"WORLD_DATA_LOADER\",\n    payload: true,\n  });\n\n  fetch(\"https://api.covid19api.com/summary\", { method: \"GET\" })\n    .then((res) => res.json())\n    .then((res) => {\n      console.log(res);\n      dispatch({\n        type: \"SET_DATE\",\n        payload: res.Date,\n      });\n      dispatch({\n        type: \"SET_WORLD_DATA\",\n        payload: res.Global,\n      });\n      dispatch({\n        type: \"SET_WORLD_COUNTRIES\",\n        payload: res.Countries,\n      });\n      dispatch({\n        type: \"WORLD_DATA_LOADER\",\n        payload: false,\n      });\n      let a = res.Countries.map((data) => ({ ...data }));\n      for (var i = 0; i < a.length; i++) {\n        for (var j = i + 1; j < a.length; j++) {\n          if (a[i][\"TotalConfirmed\"] < a[j][\"TotalConfirmed\"]) {\n            var temp = a[i];\n            a[i] = a[j];\n            a[j] = temp;\n          }\n        }\n      }\n      dispatch({\n        type: \"SET_WORLD_TOP_10\",\n        payload: a.slice(0, 10),\n      });\n    });\n};\n\nexport const searchCountry = (value) => (dispatch) => {\n  dispatch({\n    type: \"SEARCH_COUNTRY_LOADER\",\n    payload: true,\n  });\n  dispatch({\n    type: \"SET_SEARCHED_COUNTRY\",\n    payload: value,\n  });\n  setTimeout(() => {\n    dispatch({\n      type: \"SEARCH_COUNTRY_LOADER\",\n      payload: false,\n    });\n  }, 1000);\n};\n","import React, { PureComponent } from \"react\";\nimport ReactEcharts from \"echarts-for-react\";\n\nclass LineChart extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: \"\",\n      labels: \"\",\n    };\n  }\n\n  static getDerivedStateFromProps = (props, state) => {\n    return {\n      data: props.data,\n      labels: props.labels,\n    };\n  };\n\n  _getSeriesList = () => {\n    // echartsInstance.dispose();\n    const { data } = this.state;\n    // const { color } = this.props;\n    // let color = [\"#0076f4\", \"crimson\", \"Black\"];\n    let lineChart = data.map((d, i) => {\n      return {\n        name: this.props.legends && this.props.legends[i],\n        // data: d.map((e) => e.toFixed(2)),\n        data: d,\n        type: \"line\",\n        // stack: \"cfgvgbh\",\n        // smooth: true,\n        itemStyle: {\n          color: this.props.colors[i],\n        },\n      };\n    });\n\n    return this._getOptions(lineChart);\n  };\n\n  _getOptions(lineChart) {\n    const { labels, data, legends } = this.state;\n    return {\n      //   title: {\n      //     text: this.props.title,\n      //     // textAlign: \"center\",\n      //     textStyle: {\n      //       fontSize: 10,\n      //     },\n      //   },\n      tooltip: {\n        trigger: \"axis\",\n        // axisPointer: {\n        //   type: \"cross\",\n        // },\n      },\n      legend: {\n        data: this.props.legends,\n        bottom: 0,\n        itemGap: 5,\n        itemHeight: 5,\n        // padding: 20,\n      },\n      grid: {\n        left: \"1%\",\n        right: \"1%\",\n        bottom: \"10%\",\n        // top: this.props.legends ? \"20%\" : \"10%\",\n        containLabel: true,\n      },\n      toolbox: {\n        // feature: {\n        //   saveAsImage: {},\n        // },\n      },\n      xAxis: {\n        type: \"category\",\n        boundaryGap: false,\n        data: this.props.labels,\n      },\n      yAxis: {\n        type: \"value\",\n      },\n      series: lineChart,\n      //   [\n      //     {\n      //       name: \"aman\",\n      //       type: \"line\",\n      //       stack: \"total\",\n      //       data: [120, 132, 101, 134, 90, 230, 210],\n      //     },\n      //     {\n      //       name: \"abcd\",\n      //       type: \"line\",\n      //       stack: \"total\",\n      //       data: [220, 182, 191, 234, 290, 330, 310],\n      //     },\n      //     {\n      //       name: \"视频广告\",\n      //       type: \"line\",\n      //       stack: \"total\",\n      //       data: [150, 232, 201, 154, 190, 330, 410],\n      //     },\n      //     {\n      //       name: \"直接访问\",\n      //       type: \"line\",\n      //       stack: \"total\",\n      //       data: [320, 332, 301, 334, 390, 330, 320],\n      //     },\n      //     {\n      //       name: \"搜索引擎\",\n      //       type: \"line\",\n      //       stack: \"total\",\n      //       data: [820, 932, 901, 934, 1290, 1330, 1320],\n      //     },\n      //   ],\n    };\n  }\n\n  _getOptions2(lineChart) {\n    const { labels } = this.state;\n    // let lineChartData =\n    return {\n      title: {\n        text: \"EchartLineChart\",\n      },\n      xAxis: {\n        type: \"category\",\n        data: labels,\n        // boundaryGap: false\n      },\n      yAxis: [\n        {\n          axisLabel: {\n            textStyle: { fontSize: 10 },\n          },\n          // axisLine: { show: false },\n          // axisTick: { show: false },\n          // name: \"OSA\",\n          splitLine: {\n            lineStyle: {\n              type: \"dotted\",\n            },\n          },\n          type: \"value\",\n          name: this.props.heading,\n          nameLocation: \"center\",\n          nameTextStyle: {\n            // color: 'blue',\n            // fontStyle: 'italic',\n            fontWeight: \"bold\",\n            padding: 5,\n          },\n        },\n      ],\n      grid: {\n        left: \"3%\",\n        right: \"4%\",\n        bottom: \"3%\",\n        top: this.props.legends ? \"20%\" : \"10%\",\n        containLabel: true,\n        // height: \"100\",\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"shadow\",\n            label: {\n              show: true,\n              formatter: function (params) {\n                return params.value.replace(\"\\n\", \"\");\n              },\n            },\n          },\n        },\n      },\n      tooltip: {\n        trigger: \"axis\",\n      },\n      legend: {\n        data: this.props.legends,\n        itemGap: 35,\n        itemHeight: 18,\n        right: \"11%\",\n        top: 20,\n        icon: \"roundRect\",\n        show: this.props.legends ? true : false,\n      },\n      series: lineChart,\n      // toolbox: {\n      //   feature: {\n      //       saveAsImage: {}\n      //   }\n      // },\n      calculable: true,\n      tooltip: {\n        backgroundColor: \"#555\",\n        borderWidth: 0,\n        padding: 10,\n      },\n    };\n  }\n\n  render() {\n    const { data, labels } = this.state;\n    return (\n      <div>\n        {data && labels ? (\n          <ReactEcharts\n            notMerge={true}\n            // lazyUpdate={true}\n            style={{ height: this.props.height + \"px\", width: \"100%\" }}\n            option={this._getSeriesList()}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default LineChart;\n","import { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\n\nimport covid from \"./covid\";\n\nexport default (history) =>\n  combineReducers({\n    router: connectRouter(history),\n    covid: covid,\n  });\n","import React, { Component } from \"react\";\n\nimport { Collapse } from \"antd\";\n\nconst { Panel } = Collapse;\n\nconst text = `\n  A dog is a type of domesticated animal.\n  Known for its loyalty and faithfulness,\n  it can be found as a welcome guest in many households across the world.\n`;\n\nclass Collapsable extends Component {\n  _displayText = (data) => {\n    let local_data = data[0];\n\n    return Object.keys(local_data).map((dt) => (\n      // console.log(dt, local_data[dt])\n      <div className=\"collapsable-text-section\">\n        <h2 style={{ fontSize: \"14px\" }}>{dt !== \"Unknown\" ? dt : \"Other\"}</h2>\n        <p style={{ fontSize: \"12px\" }}>\n          Confirmed : <span className=\"green\">{local_data[dt].confirmed}</span>\n        </p>\n      </div>\n    ));\n  };\n  render() {\n    // console.log(this.props.data.map((dt) => console.log(Object.keys(dt)[0])));\n\n    const { data } = this.props;\n    return (\n      <div className=\"collapsable-section\">\n        <Collapse\n          defaultActiveKey={[\"0\"]}\n          accordion\n          expandIconPosition=\"right\"\n          style={{ borderRadius: \"10px\", marginTop: \"30px\" }}\n        >\n          {data &&\n            data.map((dt, i) => (\n              <Panel\n                key={i}\n                header={Object.keys(dt)[0]}\n                style={{\n                  fontSize: \"16px\",\n                  fontWeight: \"500\",\n                  letterSpacing: \"0.5px\",\n                }}\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    minHeight: \"100px\",\n                    flexWrap: \"wrap\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  {this._displayText(Object.values(Object.values(dt)[0]))}\n                </div>\n              </Panel>\n            ))}\n          {/* <Panel header=\"This is panel header 1\" key=\"1\">\n            <p>{text}</p>\n          </Panel>\n          <Panel header=\"This is panel header 2\" key=\"2\">\n            <p>{text}</p>\n          </Panel>\n          <Panel header=\"This is panel header 3\" key=\"3\">\n            <p>{text}</p>\n          </Panel> */}\n        </Collapse>\n      </div>\n    );\n  }\n}\n\nexport default Collapsable;\n","import React, { Component } from \"react\";\n\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\n\nimport Loader from \"../Essentials/Loader\";\nimport LineChart from \"../Essentials/LineChart\";\nimport Collapsable from \"../Essentials/Collapsable\";\n\nimport {\n  fetchIndiaData,\n  searchState,\n  fetchDistrictWiseData,\n} from \"../Actions/indiaActions\";\n\nimport { Select } from \"antd\";\n\nconst { Option } = Select;\n\nclass IndiaTracker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchSelected: \"\",\n      searchLoader: false,\n    };\n  }\n  componentDidMount() {\n    this.props.fetchIndiaData();\n    this.props.fetchDistrictWiseData();\n  }\n\n  _displayIndiaData = (india_data) => {\n    return (\n      <div className=\"flex-row-sa\">\n        {india_data && india_data.data && !india_data.show_loader ? (\n          <div className=\"box-red\">\n            <div className=\"overlay\"></div>\n            <div className=\"box-heading\">India Total Confirmed Cases</div>\n            <h3 className=\"box-stats red\">{india_data.data[0].confirmed}</h3>\n            {india_data.data_date_wise.data[\n              india_data.data_date_wise.data.length - 1\n            ].dailyconfirmed > 0 ? (\n              <h3 className=\"box-stats-up\">\n                <i className=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>&nbsp;\n                {\n                  india_data.data_date_wise.data[\n                    india_data.data_date_wise.data.length - 1\n                  ].dailyconfirmed\n                }\n              </h3>\n            ) : (\n              <h3 className=\"box-stats-down\">\n                <i className=\"fa fa-arrow-down\" aria-hidden=\"true\"></i>&nbsp;\n                {\n                  india_data.data_date_wise.data[\n                    india_data.data_date_wise.data.length - 1\n                  ].dailyconfirmed\n                }\n              </h3>\n            )}\n          </div>\n        ) : (\n          <div className=\"box-grey\">\n            <Loader />\n          </div>\n        )}\n        {india_data && !india_data.show_loader ? (\n          <div className=\"box-grey\">\n            <div className=\"overlay\"></div>\n            <h2 className=\"box-heading\">India Total Death Cases</h2>\n            <h3 className=\"box-stats grey\">{india_data.data[0].deaths}</h3>\n            {india_data.data_date_wise.data[\n              india_data.data_date_wise.data.length - 1\n            ].dailydeceased > 0 ? (\n              <h3 className=\"box-stats-up\">\n                <i className=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>&nbsp;\n                {\n                  india_data.data_date_wise.data[\n                    india_data.data_date_wise.data.length - 1\n                  ].dailydeceased\n                }\n              </h3>\n            ) : (\n              <h3 className=\"box-stats-down\">\n                <i className=\"fa fa-arrow-down\" aria-hidden=\"true\"></i>&nbsp;\n                {\n                  india_data.data_date_wise.data[\n                    india_data.data_date_wise.data.length - 1\n                  ].dailydeceased\n                }\n              </h3>\n            )}\n          </div>\n        ) : (\n          <div className=\"box-grey\">\n            <Loader />\n          </div>\n        )}\n        {india_data && !india_data.show_loader ? (\n          <div className=\"box-green\">\n            <div className=\"overlay\"></div>{\" \"}\n            <h2 className=\"box-heading\">India Total Recovered Cases</h2>\n            <h3 className=\"box-stats green\">{india_data.data[0].recovered}</h3>\n            {india_data.data_date_wise.data[\n              india_data.data_date_wise.data.length - 1\n            ].dailyrecovered > 0 ? (\n              <h3 className=\"box-stats-up\">\n                <i className=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>&nbsp;\n                {\n                  india_data.data_date_wise.data[\n                    india_data.data_date_wise.data.length - 1\n                  ].dailyrecovered\n                }\n              </h3>\n            ) : (\n              <h3 className=\"box-stats-down\">\n                <i className=\"fa fa-arrow-down\" aria-hidden=\"true\"></i>&nbsp;\n                {\n                  india_data.data_date_wise.data[\n                    india_data.data_date_wise.data.length - 1\n                  ].dailyrecovered\n                }\n              </h3>\n            )}\n          </div>\n        ) : (\n          <div className=\"box-grey\">\n            <Loader />\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  _displayIndiaActiveCases = (india_data) => {\n    return (\n      <div>\n        {india_data.data && !india_data.show_loader && (\n          <h2 className=\"page-heading\">\n            India Total Active Cases : &nbsp;\n            <span className=\"active-cases\">{india_data.data[0].active}</span>\n          </h2>\n        )}\n      </div>\n    );\n  };\n\n  _displayTop10States = (india_data) => {\n    const { searchSelected } = this.state;\n    if (india_data && !india_data.show_loader && searchSelected.length == 0) {\n      return (\n        <div style={{ margin: \"50px 0\" }}>\n          <h2 style={{ textAlign: \"center\", margin: \"30px 0\" }}>\n            Top 10 States affected the most by Pandemic Covid-19 across India\n          </h2>\n          <div className=\"flex-row-sa\">\n            {india_data.data && india_data.data.length > 0 && (\n              <React.Fragment>\n                {india_data.data.map((data, i) => {\n                  if (i > 0 && i <= 10) {\n                    return (\n                      <div className=\"box-grey\" key={i}>\n                        <h2 className=\"box-heading\">\n                          {data.state}-{data.statecode}\n                        </h2>\n                        <h3 className=\"box-stats fs-14\">\n                          Confirmed Cases :{\" \"}\n                          <span className=\"red fs-16\">{data.confirmed}</span>{\" \"}\n                          {/* {data.NewConfirmed > 0 ? (\n                            <span className=\"green fs-10\">\n                              <i\n                                className=\"fa fa-arrow-up\"\n                                aria-hidden=\"true\"\n                              ></i>\n                              &nbsp;\n                              {data.NewConfirmed}\n                            </span>\n                          ) : (\n                            <span className=\"red fs-10\">\n                              <i\n                                className=\"fa fa-arrow-down\"\n                                aria-hidden=\"true\"\n                              ></i>\n                              &nbsp;\n                              {data.NewConfirmed}\n                            </span>\n                          )} */}\n                        </h3>\n                        <h3 className=\"box-stats fs-14\">\n                          Deaths Reported :{\" \"}\n                          <span className=\"grey fs-16\">{data.deaths}</span>{\" \"}\n                          {/* {data.NewConfirmed > 0 ? (\n                            <span className=\"green fs-10\">\n                              <i\n                                className=\"fa fa-arrow-up\"\n                                aria-hidden=\"true\"\n                              ></i>\n                              &nbsp;\n                              {data.NewDeaths}\n                            </span>\n                          ) : (\n                            <span className=\"red fs-10\">\n                              <i\n                                className=\"fa fa-arrow-down\"\n                                aria-hidden=\"true\"\n                              ></i>\n                              &nbsp;\n                              {data.NewDeaths}\n                            </span>\n                          )} */}\n                        </h3>\n                        <h3 className=\"box-stats fs-14\">\n                          Recovered Cases :{\" \"}\n                          <span className=\"green fs-16\">{data.recovered}</span>{\" \"}\n                          {/* {data.NewConfirmed > 0 ? (\n                            <span className=\"green fs-10\">\n                              <i\n                                className=\"fa fa-arrow-up\"\n                                aria-hidden=\"true\"\n                              ></i>\n                              &nbsp;\n                              {data.NewRecovered}\n                            </span>\n                          ) : (\n                            <span className=\"red fs-10\">\n                              <i\n                                className=\"fa fa-arrow-down\"\n                                aria-hidden=\"true\"\n                              ></i>\n                              &nbsp;\n                              {data.NewRecovered}\n                            </span>\n                          )} */}\n                        </h3>\n                        <h3 className=\"box-stats fs-14\">\n                          Active Cases :{\" \"}\n                          <span className=\"blue fs-16\">{data.active}</span>{\" \"}\n                          {/* {data.NewConfirmed -\n                            (data.NewDeaths + data.NewRecovered) >\n                          0 ? (\n                            <span className=\"green fs-10\">\n                              <i\n                                className=\"fa fa-arrow-up\"\n                                aria-hidden=\"true\"\n                              ></i>\n                              &nbsp;\n                              {data.NewConfirmed -\n                                (data.NewDeaths + data.NewRecovered)}\n                            </span>\n                          ) : (\n                            <span className=\"red fs-10\">\n                              <i\n                                className=\"fa fa-arrow-down\"\n                                aria-hidden=\"true\"\n                              ></i>\n                              &nbsp;\n                              {(data.NewConfirmed -\n                                (data.NewDeaths + data.NewRecovered)) *\n                                -1}\n                            </span>\n                          )} */}\n                        </h3>\n                      </div>\n                    );\n                  }\n                })}\n              </React.Fragment>\n            )}\n          </div>\n        </div>\n      );\n    }\n  };\n\n  onChange = (value) => {\n    console.log(`selected ${value}`);\n    this.setState(\n      {\n        searchSelected: value,\n        searchLoader: false,\n      },\n      this.props.searchState(value)\n    );\n  };\n\n  _renderSearchState = (india_data) => {\n    if (india_data && !india_data.show_search_loader) {\n      return (\n        <div className=\"flex-center\" style={{ margin: \"50px 0\" }}>\n          <h2 className=\"select-label\">Search State : </h2>&nbsp;&nbsp;\n          <Select\n            showSearch\n            style={{ width: 200 }}\n            placeholder=\"Select a state\"\n            optionFilterProp=\"children\"\n            onChange={this.onChange}\n            //   onFocus={this.onFocus}\n            //   onBlur={this.onBlur}\n            //   onSearch={this.onSearch}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n            {india_data &&\n              india_data.data &&\n              india_data.data.map((state, i) => {\n                if (i > 0) {\n                  return (\n                    <Option value={state.statecode} key={i}>\n                      {state.state}\n                    </Option>\n                  );\n                }\n              })}\n          </Select>\n        </div>\n      );\n    }\n  };\n\n  _displaySearchedState = (india_data) => {\n    const { searchSelected } = this.state;\n    if (\n      india_data &&\n      !india_data.show_search_loader &&\n      searchSelected.length > 0\n    ) {\n      //   debugger;\n      return (\n        <div className=\"flex-row-sa\">\n          {india_data.searchedState && india_data.searchedState.length > 0 && (\n            <React.Fragment>\n              {india_data.searchedState.map((data, i) => {\n                return (\n                  <div className=\"box-grey\" key={i}>\n                    <h2 className=\"box-heading\">\n                      {data.state}-{data.statecode}\n                    </h2>\n                    <h3 className=\"box-stats fs-14\">\n                      Confirmed Cases :{\" \"}\n                      <span className=\"red fs-16\">{data.confirmed}</span>{\" \"}\n                      {/* {data.NewConfirmed > 0 ? (\n                        <span className=\"green fs-10\">\n                          <i className=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>\n                          &nbsp;\n                          {data.NewConfirmed}\n                        </span>\n                      ) : (\n                        <span className=\"red fs-10\">\n                          <i\n                            className=\"fa fa-arrow-down\"\n                            aria-hidden=\"true\"\n                          ></i>\n                          &nbsp;\n                          {data.NewConfirmed}\n                        </span>\n                      )} */}\n                    </h3>\n                    <h3 className=\"box-stats fs-14\">\n                      Deaths Reported :{\" \"}\n                      <span className=\"grey fs-16\">{data.deaths}</span>{\" \"}\n                      {/* {data.NewConfirmed > 0 ? (\n                        <span className=\"green fs-10\">\n                          <i className=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>\n                          &nbsp;\n                          {data.NewDeaths}\n                        </span>\n                      ) : (\n                        <span className=\"red fs-10\">\n                          <i\n                            className=\"fa fa-arrow-down\"\n                            aria-hidden=\"true\"\n                          ></i>\n                          &nbsp;\n                          {data.NewDeaths}\n                        </span>\n                      )} */}\n                    </h3>\n                    <h3 className=\"box-stats fs-14\">\n                      Recovered Cases :{\" \"}\n                      <span className=\"green fs-16\">{data.recovered}</span>{\" \"}\n                      {/* {data.NewConfirmed > 0 ? (\n                        <span className=\"green fs-10\">\n                          <i className=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>\n                          &nbsp;\n                          {data.NewRecovered}\n                        </span>\n                      ) : (\n                        <span className=\"red fs-10\">\n                          <i\n                            className=\"fa fa-arrow-down\"\n                            aria-hidden=\"true\"\n                          ></i>\n                          &nbsp;\n                          {data.NewRecovered}\n                        </span>\n                      )} */}\n                    </h3>\n                    <h3 className=\"box-stats fs-14\">\n                      Active Cases :{\" \"}\n                      <span className=\"blue fs-16\">{data.active}</span>{\" \"}\n                      {/* {data.NewConfirmed -\n                        (data.NewDeaths + data.NewRecovered) >\n                      0 ? (\n                        <span className=\"green fs-10\">\n                          <i className=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>\n                          &nbsp;\n                          {data.NewConfirmed -\n                            (data.NewDeaths + data.NewRecovered)}\n                        </span>\n                      ) : (\n                        <span className=\"red fs-10\">\n                          <i\n                            className=\"fa fa-arrow-down\"\n                            aria-hidden=\"true\"\n                          ></i>\n                          &nbsp;\n                          {(data.NewConfirmed -\n                            (data.NewDeaths + data.NewRecovered)) *\n                            -1}\n                        </span>\n                      )} */}\n                    </h3>\n                  </div>\n                );\n              })}\n            </React.Fragment>\n          )}\n        </div>\n      );\n    } else if (searchSelected.length > 0 && india_data.show_search_loader) {\n      return (\n        <div>\n          <Loader />\n        </div>\n      );\n    }\n  };\n\n  _displayDataSummary = (india_data) => {\n    if (\n      india_data &&\n      india_data.data_date_wise &&\n      india_data.data_date_wise.data &&\n      !india_data.show_loader\n    ) {\n      return (\n        <div>\n          <h2\n            style={{\n              textAlign: \"center\",\n              marginTop: \"50px\",\n              marginBottom: \"0\",\n            }}\n          >\n            Datewise Report for Pandemic Covid-19 Confirmed, Deceased, Recovered\n            and Active Cases in India\n          </h2>\n          <LineChart\n            data={[\n              india_data.data_date_wise.confirmed,\n              india_data.data_date_wise.deaths,\n              india_data.data_date_wise.recovered,\n            ]}\n            labels={india_data.data_date_wise.date}\n            legends={[\"Confirmed\", \"Deceased\", \"Recovered\"]}\n            colors={[\"crimson\", \"grey\", \"green\"]}\n            title={\"Pandemic Covid-19 Cases Report in India\"}\n            height=\"400\"\n          />\n          <div style={{ textAlign: \"center\", margin: \"15px 0\" }}>\n            <h4>\n              Last Updated :{\" \"}\n              {india_data.data_date_wise.data[\n                india_data.data_date_wise.data.length - 1\n              ].date + \"2020\"}{\" \"}\n              {\"  \"}\n              &nbsp; Confirmed Cases :{\" \"}\n              <span className=\"red\">\n                {\n                  india_data.data_date_wise.data[\n                    india_data.data_date_wise.data.length - 1\n                  ].totalconfirmed\n                }\n              </span>\n              {india_data.data_date_wise.data[\n                india_data.data_date_wise.data.length - 1\n              ].dailyconfirmed > 0 ? (\n                <span className=\"green\">\n                  &nbsp;\n                  <i className=\"fa fa-arrow-up fs-10\" aria-hidden=\"true\"></i>\n                  {\n                    india_data.data_date_wise.data[\n                      india_data.data_date_wise.data.length - 1\n                    ].dailyconfirmed\n                  }\n                </span>\n              ) : (\n                <span className=\"red\">\n                  &nbsp;\n                  <i className=\"fa fa-arrow-down fs-10\" aria-hidden=\"true\"></i>\n                  {\n                    india_data.data_date_wise.data[\n                      india_data.data_date_wise.data.length - 1\n                    ].dailyconfirmed\n                  }\n                </span>\n              )}\n              &nbsp; Deceased Cases :{\" \"}\n              <span className=\"grey\">\n                {\n                  india_data.data_date_wise.data[\n                    india_data.data_date_wise.data.length - 1\n                  ].totaldeceased\n                }\n              </span>\n              {india_data.data_date_wise.data[\n                india_data.data_date_wise.data.length - 1\n              ].dailydeceased > 0 ? (\n                <span className=\"green\">\n                  &nbsp;\n                  <i className=\"fa fa-arrow-up fs-10\" aria-hidden=\"true\"></i>\n                  {\n                    india_data.data_date_wise.data[\n                      india_data.data_date_wise.data.length - 1\n                    ].dailydeceased\n                  }\n                </span>\n              ) : (\n                <span className=\"red\">\n                  &nbsp;\n                  <i className=\"fa fa-arrow-down fs-10\" aria-hidden=\"true\"></i>\n                  {\n                    india_data.data_date_wise.data[\n                      india_data.data_date_wise.data.length - 1\n                    ].dailydeceased\n                  }\n                </span>\n              )}\n              &nbsp; Recovered Cases :{\" \"}\n              <span className=\"green\">\n                {\n                  india_data.data_date_wise.data[\n                    india_data.data_date_wise.data.length - 1\n                  ].totalrecovered\n                }\n              </span>\n              {india_data.data_date_wise.data[\n                india_data.data_date_wise.data.length - 1\n              ].dailyrecovered > 0 ? (\n                <span className=\"green\">\n                  &nbsp;\n                  <i className=\"fa fa-arrow-up fs-10\" aria-hidden=\"true\"></i>\n                  {\n                    india_data.data_date_wise.data[\n                      india_data.data_date_wise.data.length - 1\n                    ].dailyrecovered\n                  }\n                </span>\n              ) : (\n                <span className=\"red\">\n                  &nbsp;\n                  <i className=\"fa fa-arrow-down fs-10\" aria-hidden=\"true\"></i>\n                  {\n                    india_data.data_date_wise.data[\n                      india_data.data_date_wise.data.length - 1\n                    ].dailyrecovered\n                  }\n                </span>\n              )}\n              &nbsp; Active Cases :{\" \"}\n              <span className=\"blue\">\n                {parseInt(\n                  india_data.data_date_wise.data[\n                    india_data.data_date_wise.data.length - 1\n                  ].totalconfirmed\n                ) -\n                  (parseInt(\n                    india_data.data_date_wise.data[\n                      india_data.data_date_wise.data.length - 1\n                    ].totaldeceased\n                  ) +\n                    parseInt(\n                      india_data.data_date_wise.data[\n                        india_data.data_date_wise.data.length - 1\n                      ].totalrecovered\n                    ))}\n              </span>\n            </h4>\n          </div>\n          <LineChart\n            data={[india_data.data_date_wise.active]}\n            labels={india_data.data_date_wise.date}\n            legends={[\"Active Covid-19 Cases Reported\"]}\n            colors={[\"#007bff\"]}\n            height=\"400\"\n          />\n        </div>\n      );\n    }\n  };\n\n  _displayTestingDataSummary = (india_data) => {\n    if (\n      india_data &&\n      india_data.testing_data &&\n      india_data.testing_data.data &&\n      !india_data.show_loader\n    ) {\n      return (\n        <div>\n          <h2\n            style={{\n              textAlign: \"center\",\n              marginTop: \"50px\",\n              marginBottom: \"0\",\n            }}\n          >\n            Testing Report for Pandemic Covid-19 Samples Tested and Confirmed\n            Positive Daily\n          </h2>\n          <div className=\"flex-row-sa\">\n            <div className=\"w-50\">\n              <LineChart\n                data={[india_data.testing_data.samplesTested]}\n                labels={india_data.testing_data.dates}\n                legends={[\"Samples Tested Daily\"]}\n                colors={[\"grey\"]}\n                // title={\"Pandemic Covid-19 Cases Report in India\"}\n                height=\"400\"\n              />\n            </div>\n            <div className=\"w-50\">\n              <LineChart\n                data={[india_data.testing_data.samplesPositive]}\n                labels={india_data.testing_data.dates}\n                legends={[\"Samples Tested Positive Daily\"]}\n                colors={[\"crimson\"]}\n                // title={\"Pandemic Covid-19 Cases Report in India\"}\n                height=\"400\"\n              />\n            </div>\n          </div>\n          <div>\n            <h4 style={{ textAlign: \"center\", margin: \"15px 0\" }}>\n              Last Updated :{\" \"}\n              {\n                india_data.testing_data.data[\n                  india_data.testing_data.data.length - 1\n                ].updatetimestamp\n              }{\" \"}\n              {\"  \"}\n              &nbsp; Total Samples Tested :{\" \"}\n              <span className=\"grey\">\n                {parseInt(\n                  india_data.testing_data.data[\n                    india_data.testing_data.data.length - 1\n                  ].totalsamplestested\n                )}\n              </span>\n              {parseInt(\n                india_data.testing_data.data[\n                  india_data.testing_data.data.length - 1\n                ].totalsamplestested.replace(\",\", \"\")\n              ) -\n                parseInt(\n                  india_data.testing_data.data[\n                    india_data.testing_data.data.length - 2\n                  ].totalsamplestested.replace(\",\", \"\")\n                ) >\n              0 ? (\n                <span className=\"green\">\n                  &nbsp;\n                  <i className=\"fa fa-arrow-up fs-10\" aria-hidden=\"true\"></i>\n                  {parseInt(\n                    india_data.testing_data.data[\n                      india_data.testing_data.data.length - 1\n                    ].totalsamplestested\n                  ) -\n                    parseInt(\n                      india_data.testing_data.data[\n                        india_data.testing_data.data.length - 2\n                      ].totalsamplestested\n                    )}\n                </span>\n              ) : (\n                <span className=\"red\">\n                  &nbsp;\n                  <i className=\"fa fa-arrow-down fs-10\" aria-hidden=\"true\"></i>\n                  {parseInt(\n                    india_data.testing_data.data[\n                      india_data.testing_data.data.length - 1\n                    ].totalsamplestested.replace(\",\", \"\")\n                  ) -\n                    parseInt(\n                      india_data.testing_data.data[\n                        india_data.testing_data.data.length - 2\n                      ].totalsamplestested.replace(\",\", \"\")\n                    )}\n                </span>\n              )}\n              &nbsp;&nbsp; Total Samples Tested Positive :{\" \"}\n              <span className=\"red\">\n                {parseInt(\n                  india_data.testing_data.data[\n                    india_data.testing_data.data.length - 1\n                  ].totalpositivecases.replace(\",\", \"\")\n                )}\n              </span>\n              {parseInt(\n                india_data.testing_data.data[\n                  india_data.testing_data.data.length - 1\n                ].totalpositivecases.replace(\",\", \"\")\n              ) -\n                parseInt(\n                  india_data.testing_data.data[\n                    india_data.testing_data.data.length - 2\n                  ].totalpositivecases.replace(\",\", \"\")\n                ) >\n              0 ? (\n                <span className=\"green\">\n                  &nbsp;\n                  <i className=\"fa fa-arrow-up fs-10\" aria-hidden=\"true\"></i>\n                  {parseInt(\n                    india_data.testing_data.data[\n                      india_data.testing_data.data.length - 1\n                    ].totalpositivecases.replace(\",\", \"\")\n                  ) -\n                    parseInt(\n                      india_data.testing_data.data[\n                        india_data.testing_data.data.length - 2\n                      ].totalpositivecases.replace(\",\", \"\")\n                    )}\n                </span>\n              ) : (\n                <span className=\"red\">\n                  &nbsp;\n                  <i className=\"fa fa-arrow-down fs-10\" aria-hidden=\"true\"></i>\n                  {parseInt(\n                    india_data.testing_data.data[\n                      india_data.testing_data.data.length - 1\n                    ].totalpositivecases.replace(\",\", \"\")\n                  ) -\n                    parseInt(\n                      india_data.testing_data.data[\n                        india_data.testing_data.data.length - 2\n                      ].totalpositivecases.replace(\",\", \"\")\n                    )}\n                </span>\n              )}\n              {/* &nbsp; Deceased Cases :{\" \"}\n              <span className=\"grey\">\n                {\n                  india_data.data_date_wise.data[\n                    india_data.data_date_wise.data.length - 1\n                  ].totaldeceased\n                }\n              </span>\n              {india_data.data_date_wise.data[\n                india_data.data_date_wise.data.length - 1\n              ].dailydeceased > 0 ? (\n                <span className=\"green\">\n                  &nbsp;<i className=\"fa fa-arrow-up fs-10\" aria-hidden=\"true\"></i>\n                  {\n                    india_data.data_date_wise.data[\n                      india_data.data_date_wise.data.length - 1\n                    ].dailydeceased\n                  }\n                </span>\n              ) : (\n                <span className=\"red\">\n                  &nbsp;\n                  <i className=\"fa fa-arrow-down fs-10\" aria-hidden=\"true\"></i>\n                  {\n                    india_data.data_date_wise.data[\n                      india_data.data_date_wise.data.length - 1\n                    ].dailydeceased\n                  }\n                </span>\n              )}\n              &nbsp; Recovered Cases :{\" \"}\n              <span className=\"green\">\n                {\n                  india_data.data_date_wise.data[\n                    india_data.data_date_wise.data.length - 1\n                  ].totalrecovered\n                }\n              </span>\n              {india_data.data_date_wise.data[\n                india_data.data_date_wise.data.length - 1\n              ].dailyrecovered > 0 ? (\n                <span className=\"green\">\n                  &nbsp;<i className=\"fa fa-arrow-up fs-10\" aria-hidden=\"true\"></i>\n                  {\n                    india_data.data_date_wise.data[\n                      india_data.data_date_wise.data.length - 1\n                    ].dailyrecovered\n                  }\n                </span>\n              ) : (\n                <span className=\"red\">\n                  &nbsp;\n                  <i className=\"fa fa-arrow-down fs-10\" aria-hidden=\"true\"></i>\n                  {\n                    india_data.data_date_wise.data[\n                      india_data.data_date_wise.data.length - 1\n                    ].dailyrecovered\n                  }\n                </span>\n              )}\n              &nbsp; Active Cases :{\" \"}\n              <span className=\"blue\">\n                {parseInt(\n                  india_data.data_date_wise.data[\n                    india_data.data_date_wise.data.length - 1\n                  ].totalconfirmed\n                ) -\n                  (parseInt(\n                    india_data.data_date_wise.data[\n                      india_data.data_date_wise.data.length - 1\n                    ].totaldeceased\n                  ) +\n                    parseInt(\n                      india_data.data_date_wise.data[\n                        india_data.data_date_wise.data.length - 1\n                      ].totalrecovered\n                    ))}\n              </span> */}\n            </h4>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  _displayDistrictWise = (india_data) => {\n    if (\n      india_data &&\n      india_data.district_wise &&\n      //   Object.keys[india_data.district_wise].length > 0 &&\n      !india_data.show_loader\n    ) {\n      return (\n        <React.Fragment>\n          <h2\n            style={{\n              textAlign: \"center\",\n              marginTop: \"50px\",\n              marginBottom: \"0\",\n            }}\n          >\n            Confirmed Covid-19 Cases Count in Ditricts for States in India\n          </h2>\n          <Collapsable data={india_data.district_wise} />\n        </React.Fragment>\n      );\n    }\n  };\n  render() {\n    const { india_data, date } = this.props;\n    return (\n      <div>\n        <div className=\"ta-right date\">\n          {date\n            ? \"Last Updated : \" +\n              moment(date).utc().format(\"dddd, MMMM Do YYYY, h:mm:ss a\")\n            : //   this._displayDate(date)\n              \"fetching...\"}\n        </div>\n        {this._displayIndiaData(india_data)}\n        {this._displayIndiaActiveCases(india_data)}\n        {this._renderSearchState(india_data)}\n        {this._displayTop10States(india_data)}\n        {this._displaySearchedState(india_data)}\n        {this._displayDataSummary(india_data)}\n        {this._displayTestingDataSummary(india_data)}\n        {this._displayDistrictWise(india_data)}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  india_data: state.covid.india,\n  date: state.covid.date_india,\n});\n\nexport default connect(mapStateToProps, {\n  fetchIndiaData,\n  searchState,\n  fetchDistrictWiseData,\n})(IndiaTracker);\n","import moment from \"moment\";\n\nexport const fetchIndiaData = () => (dispatch) => {\n  dispatch({\n    type: \"INDIA_DATA_LOADER\",\n    payload: true,\n  });\n\n  fetch(\"https://api.covid19india.org/data.json\", { method: \"GET\" })\n    .then((res) => res.json())\n    .then((res) => {\n      let dt = res.statewise[0][\"lastupdatedtime\"].split(\" \");\n      dt[0] = dt[0].split(\"/\").join(\"-\").split(\"-\").reverse().join(\"-\");\n      dt = dt.join(\" \").split(\" \").join(\"T\") + \"Z\";\n      dispatch({\n        type: \"SET_INDIA_DATE\",\n        payload: dt,\n      });\n      dispatch({\n        type: \"SET_INDIA_DATA\",\n        payload: res.statewise,\n      });\n      let date = [];\n      let confirmed = [];\n      let deceased = [];\n      let recovered = [];\n      let active = [];\n      res.cases_time_series.map((data) => {\n        date.push(data.date);\n        confirmed.push(parseInt(data.dailyconfirmed));\n        deceased.push(parseInt(data.dailydeceased));\n        recovered.push(parseInt(data.dailyrecovered));\n        active.push(\n          parseInt(data.totalconfirmed) -\n            (parseInt(data.totaldeceased) + parseInt(data.totalrecovered))\n        );\n        return;\n      });\n      dispatch({\n        type: \"SET_INDIA_DATE_WISE_ANALYSIS\",\n        payload: {\n          data: res.cases_time_series,\n          date: date,\n          confirmed: confirmed,\n          deaths: deceased,\n          recovered: recovered,\n          active: active,\n        },\n      });\n      let testingDates = [];\n      let samples = [];\n      let samplePositive = [];\n\n      let tested = res.tested\n        .filter(\n          (data) => data.updatetimestamp != \"13/04/2020 21:00:00\"\n          //   {\n          // if (\n          //   data.updatetimestamp !== \"13/04/2020 21:00:00\" ||\n          //   data.updatetimestamp !== \"04/04/2020 21:00:00\"\n          // ) {\n          //   return data;\n          // }\n          //   }\n        )\n        .filter((data) => data.updatetimestamp != \"04/04/2020 21:00:00\");\n\n      let testingData = tested.map((data) => {\n        let dt = data.updatetimestamp.split(\" \");\n        dt[0] = dt[0].split(\"/\").join(\"-\").split(\"-\").reverse().join(\"-\");\n        dt = dt.join(\" \").split(\" \")[0];\n\n        return {\n          ...data,\n          updatetimestamp: moment.utc(dt).local().format(\"Do MMMM YYYY\"),\n        };\n      });\n\n      tested.map((data) => {\n        samples.push(\n          data.samplereportedtoday.length > 0\n            ? parseInt(data.samplereportedtoday)\n            : 0\n        );\n        samplePositive.push(\n          data.positivecasesfromsamplesreported.length > 0\n            ? parseInt(data.positivecasesfromsamplesreported)\n            : 0\n        );\n      });\n\n      testingData.map((data) => {\n        testingDates.push(data.updatetimestamp);\n      });\n\n      dispatch({\n        type: \"SET_INDIA_TESTING_DATA\",\n        payload: {\n          data: testingData,\n          dates: testingDates,\n          samplesTested: samples,\n          samplesPositive: samplePositive,\n        },\n      });\n      dispatch({\n        type: \"INDIA_DATA_LOADER\",\n        payload: false,\n      });\n    });\n};\n\nexport const searchState = (value) => (dispatch) => {\n  dispatch({\n    type: \"SEARCH_STATE_LOADER\",\n    payload: true,\n  });\n  dispatch({\n    type: \"SET_SEARCHED_STATE\",\n    payload: value,\n  });\n  setTimeout(() => {\n    dispatch({\n      type: \"SEARCH_STATE_LOADER\",\n      payload: false,\n    });\n  }, 1000);\n};\n\nexport const fetchDistrictWiseData = () => (dispatch) => {\n  //enabke loader\n  dispatch({\n    type: \"INDIA_DATA_LOADER\",\n    payload: true,\n  });\n  fetch(\"https://api.covid19india.org/state_district_wise.json\", {\n    method: \"GET\",\n  })\n    .then((res) => res.json())\n    .then((res) => {\n      dispatch({\n        type: \"SET_DATA_DISTRICT_WISE\",\n        payload: Object.keys(res)\n          .sort()\n          .map((key) => {\n            return { [key]: { ...res[key] } };\n          }),\n      });\n      dispatch({\n        type: \"INDIA_DATA_LOADER\",\n        payload: false,\n      });\n    });\n};\n","import React, { Component } from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n  withRouter,\n} from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\n\nimport { NavLink } from \"react-router-dom\";\n\nimport { Layout, Menu, Breadcrumb } from \"antd\";\n\nimport WorldTracker from \"./WorldTracker\";\nimport IndiaTracker from \"./IndiaTracker\";\n\nimport \"antd/dist/antd.css\";\n\nconst { Header, Content, Footer } = Layout;\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n    this.state = {\n      current_location: \"\",\n    };\n  }\n\n  //   componentDidMount() {\n  //     this.setState({\n  //       current_location: this.props.router.location.pathname.replace(\"/\", \"\"),\n  //     });\n  //   }\n\n  //   static getDerivedStateFromProps(props, state) {\n  //     if (props.router.location.pathname.replace(\"/\", \"\") !== state.currentRow) {\n  //       return {\n  //         current_location: props.router.location.pathname.replace(\"/\", \"\"),\n  //       };\n  //     }\n  //     // Return null to indicate no change to state.\n  //     return null;\n  //   }\n  _displayPageHeading() {\n    if (window.location.pathname == \"/world-tracker\") {\n      return \"Pandemic Covid-19 World Tracker\";\n    } else {\n      return \"Pandemic Covid-19 India Tracker\";\n    }\n  }\n  _displayHeaderRight() {\n    console.log(this.myRef);\n    if (this.myRef.current && this.myRef.current.clientWidth > 300) {\n      if (window.location.pathname == \"/world-tracker\") {\n        return (\n          <NavLink to=\"/india-tracker\" className=\"header-item tracker-heading\">\n            India Covid-19 Tracker\n          </NavLink>\n        );\n      } else {\n        return (\n          <NavLink to=\"/world-tracker\" className=\"header-item tracker-heading\">\n            World Covid-19 Tracker\n          </NavLink>\n        );\n      }\n    }\n  }\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Header style={{ position: \"fixed\", zIndex: 1, width: \"100%\" }}>\n            <div className=\"logo\">{this._displayPageHeading()}</div>\n            <div className=\"header-right\" ref={this.myRef}>\n              <div className=\"aman\">{this._displayHeaderRight()}</div>\n            </div>\n          </Header>\n          <Content\n            className=\"site-layout\"\n            style={{ padding: \"0 25px\", marginTop: 64 }}\n          >\n            {/* <Breadcrumb style={{ margin: \"16px 0\" }}>\n              <Breadcrumb.Item>Home</Breadcrumb.Item>\n              <Breadcrumb.Item>List</Breadcrumb.Item>\n              <Breadcrumb.Item>App</Breadcrumb.Item>\n            </Breadcrumb> */}\n            <div\n              className=\"site-layout-background\"\n              style={{\n                padding: 24,\n                minHeight: 380,\n                background: \"#fff\",\n                marginTop: \"30px\",\n              }}\n            >\n              <Switch>\n                <Route exact path=\"/\">\n                  <Redirect to=\"/world-tracker\" />\n                </Route>\n                <Route exact path=\"/world-tracker\" component={WorldTracker} />\n                <Route exact path=\"/india-tracker\" component={IndiaTracker} />\n              </Switch>\n            </div>\n          </Content>\n          <Footer style={{ textAlign: \"center\" }}>\n            A Covid-19 Tracker Project, created with the help of apis providing\n            data from resources like: <a>api.covid19api.com</a> and &nbsp;\n            <a>api.covid19india.org</a>.\n            <br />\n            Created by Aman Arora | Built using react and redux.\n          </Footer>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  router: state.router,\n});\n\nexport default connect(mapStateToProps, {})(Home);\n","import React, { Component } from \"react\";\n\nimport Home from \"../Components/Home\";\n\nexport default class index extends Component {\n  render() {\n    return (\n      <div>\n        <Home />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport { Provider } from \"react-redux\";\nimport { createBrowserHistory } from \"history\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./Reducers\";\nimport {\n  connectRouter,\n  routerMiddleware,\n  ConnectedRouter,\n} from \"connected-react-router\";\n\nimport Routes from \"./AppRouter\";\n\nimport \"./App.css\";\n\nconst history = createBrowserHistory();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst initialState = {};\n\nconst middleware = [routerMiddleware(history), thunk];\n\nconst store = createStore(\n  rootReducer(history),\n  initialState,\n  composeEnhancers(applyMiddleware(...middleware))\n);\n\nfunction App() {\n  return (\n    // <div className=\"App\">\n    //   {/* <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header> */}\n    //   Covid 19 World Tracker\n    // </div>\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <Routes />\n      </ConnectedRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}